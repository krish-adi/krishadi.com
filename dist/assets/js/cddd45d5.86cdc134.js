"use strict";(self.webpackChunkkrishadi_com=self.webpackChunkkrishadi_com||[]).push([[882],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>v});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(t),d=r,v=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return t?a.createElement(v,l(l({ref:n},u),{},{components:t})):a.createElement(v,l({ref:n},u))}));function v(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9563:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const o={slug:"/python",title:"Python Environments",description:"A quickstart to using and managing Python environments",published:"11/24/2021",last_update:{date:"1/26/2022"}},l="Python Environments",i={unversionedId:"kast/python",id:"kast/python",title:"Python Environments",description:"A quickstart to using and managing Python environments",source:"@site/zettelkasten/kast/01-python.md",sourceDirName:"kast",slug:"/python",permalink:"/zettelkasten/python",draft:!1,tags:[],version:"current",lastUpdatedAt:1643151600,formattedLastUpdatedAt:"Jan 25, 2022",sidebarPosition:1,frontMatter:{slug:"/python",title:"Python Environments",description:"A quickstart to using and managing Python environments",published:"11/24/2021",last_update:{date:"1/26/2022"}},sidebar:"zettelkastenSidebar",previous:{title:"Zettelkasten",permalink:"/zettelkasten/"},next:{title:"Rheology",permalink:"/zettelkasten/rheology"}},s={},p=[{value:"venv",id:"venv",level:2},{value:"pyenv",id:"pyenv",level:2},{value:"and more...",id:"and-more",level:2}],u={toc:p},c="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"python-environments"},"Python Environments"),(0,r.kt)("p",null,"Python has a nice progressive learning curve. It can be used in many ways, for many things. From quickly opening a dataset, and visualising it to writing heavy processing algorithms to running web-applications. Python could be your weapon of choice."),(0,r.kt)("p",null,"A downside about Python is managing dependencies and conflicts between package versions. As libraries/packages mature, they tend to deprecate some features or mutate them. Making compatibility across package versions tricky. The best way to resolve this is to use a virtual environment. A virtual environment neatly bundles all the packages for your project with its compatible dependencies."),(0,r.kt)("p",null,"So, here is my cheatsheet for managing Python environments. Most of the time I forget some of these commands and I need to scavenge the web for a particular command. So, I decided to put together a knowledge base here for my own reference."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"These commands were tested on a mac.")),(0,r.kt)("h2",{id:"venv"},"venv"),(0,r.kt)("p",null,"Let's start with ",(0,r.kt)("inlineCode",{parentName:"p"},"venv"),". It comes pre installed in Python (3.5+). To create a virtual environment folder with name ",(0,r.kt)("inlineCode",{parentName:"p"},"ENV_NAME")," inside your project folder, use the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"python -m venv ./ENV_NAME\n")),(0,r.kt)("p",null,"I prefer installing all my virtual environments into a folder (example ",(0,r.kt)("inlineCode",{parentName:"p"},"venv"),") at the root of my system inside a folder with the name of the project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"python -m venv ~/venv/PROJECT_NAME\n")),(0,r.kt)("p",null,"To activate the environment, you need to source it by running the command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"source ./ENV_NAME/bin/activate\n")),(0,r.kt)("p",null,"And, I always run this afterwards, since most of my projects depend on them."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pip install --upgrade pip\npip install wheel\n")),(0,r.kt)("p",null,"The other problem of managing environments is also managing different versions of Python. And I find the best way to solve this along with virtual environments is to use ",(0,r.kt)("inlineCode",{parentName:"p"},"pyenv"),"."),(0,r.kt)("h2",{id:"pyenv"},"pyenv"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"pyenv")," manages the installation of different versions of Python and also the different virtual environments."),(0,r.kt)("p",null,"On a mac, installation of ",(0,r.kt)("inlineCode",{parentName:"p"},"pyenv")," is done using ",(0,r.kt)("inlineCode",{parentName:"p"},"brew"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"brew install pyenv\nbrew install pyenv-virtualenv\n")),(0,r.kt)("p",null,"After the installation, you will be instructed to add the following to the ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," if you are using bash for your terminal or add it to ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.zshrc")," if you are using zsh for your terminal (zsh is the new standard for macOS)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'# add to ~/.zshrc\neval "$(pyenv init -)"\neval "$(pyenv virtualenv-init -)"\n')),(0,r.kt)("p",null,"Installing a version of Python to your system is done by"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pyenv install VERSION_NUMBER_OR_NAME\n")),(0,r.kt)("p",null,"To list all the available versions of Python that can be installed, run this command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pyenv install --list\n")),(0,r.kt)("p",null,"To create a virtual environment, you can sue the command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# creating a virtual environment\npyenv virtualenv PYTHON_VERSION ENVIRONMENT_NAME\n")),(0,r.kt)("p",null,"To activate or deactivate a virtual environment you can use"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# activate or deactivate a virtual environment\npyenv activate ENVIRONMENT_NAME\npyenv deactivate\n")),(0,r.kt)("p",null,"To list all the virtual environments and the Python versions installed in ",(0,r.kt)("inlineCode",{parentName:"p"},"pyenv")," you'd use"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# lists all virtual environments and Python versions\npyenv versions\n\n# list all pyenv virtual environments\npyenv virtualenvs\n")),(0,r.kt)("p",null,"Coming to the best part of ",(0,r.kt)("inlineCode",{parentName:"p"},"pyenv")," is the ability to set the local and global Python version, this can be set so that opening a terminal in a folder will automatically activate the virtual environment."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# setting for global\npyenv global ENVIRONMENT_NAME_OR_PYTHON_VERSION\n\n# setting for local, for a folder/project\npyenv local ENVIRONMENT_NAME_OR_PYTHON_VERSION\n")),(0,r.kt)("p",null,"To delete a virtual environment, you'd use this"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# delete a virtual environment\npyenv virtualenv-delete ENVIRONMENT_NAME\n\n# this also work\npyenv uninstall ENVIRONMENT_NAME\n")),(0,r.kt)("h2",{id:"and-more"},"and more..."),(0,r.kt)("p",null,"There are several other Python project management tools. One that interests me is ",(0,r.kt)("inlineCode",{parentName:"p"},"Poetry"),". It helps with all of the above, and helps with managing multiple environments (dev, test, prod) for a particular project along with the ability to build and publish a package."))}m.isMDXComponent=!0}}]);